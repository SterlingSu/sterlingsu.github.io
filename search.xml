<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Postman 测试 API 调用 OpenWeatherMap 查询各个城市天气]]></title>
      <url>/2017/10/25/Postman-API/</url>
      <content type="html"><![CDATA[<p>我们来讨论一个名为 Postman 的便利工具，它提供了一个用于制作和测试 API 调用的友好用户界面。 Postman 目前并未安装在所有电脑上。 如果您没有看到它，请访问邮递员网站并下载 MacOS 或 Chrome 应用程序。 Chrome 应用程序将很快启动。 您可以选择注册一个帐户，或者使用Postman 而不用帐号。 您也可以将其安装在家庭环境中。</p>
<blockquote>
<p>注意：Postman 不会有 CORS 问题，因为 Postman 中的API 调用不是源于浏览器。 如果您使用 JavaScript 从浏览器进行 API 调用，则应始终确认 API 实现 CORS 。</p>
</blockquote>
<a id="more"></a>
<p>让我们来看看在 Postman 中进行 API 调用的基础知识。 例如，我们将在 Open Weather API 中查询 SuZhou 的天气情况。</p>
<h3 id="API-Keys"><a href="#API-Keys" class="headerlink" title="API Keys"></a>API Keys</h3><p>首先，我们需要从 Open Weather API  (<a href="https://openweathermap.org/api" target="_blank" rel="external">https://openweathermap.org/api</a>) 获得一个 API Key。 这是一个特殊的代码，允许我们请求数据，并将我们在应用程序中的任何请求与我们拥有的帐户相关联。 除此之外，这有助于 API 拥有者确保人员和应用程序不会因为不必要的大量请求而陷入困境。</p>
<p>您可以通过在注册页面上创建一个基本帐户来快速获得免费的 Open Weather API 密钥。 成功创建帐户后，您可以在用户信息板的 API 密钥分区中锁定您的 API 密钥。 保持这个关键的方便，我们会在短时间内使用它！</p>
<h3 id="Using-Postman"><a href="#Using-Postman" class="headerlink" title="Using Postman"></a>Using Postman</h3><p>现在我们有一个 API Keys，我们来用它来测试 Postman 中的一个 API 调用。 现在打开程序，你应该看到这样的东西： </p>
<p><img src="http://ot86l2rm2.bkt.clouddn.com/17-10-30/32222735.jpg" alt=""></p>
<ol>
<li>我们选择我们想要的那种请求。 在这种情况下，这是一个 GET 请求，因为我们要求从 Open Weather API 接收数据。<br></li>
<li>我们可以输入没有查询字符串的 API URL。 对于此调用，URL为<a href="http://api.openweathermap.org/data/2.5/weather。" target="_blank" rel="external">http://api.openweathermap.org/data/2.5/weather。</a> 然后，您可以单击 Params按钮添加参数作为键值对。 这里我们添加了 q 和 appid 以及相应的值。 （在上面的示例中，appid 已被删除;但请确保将您刚才收到的唯一 API 密钥放在这里！）您也可以直接在 URL 中输入参数，单独添加参数可以更容易保持组织（避免打字错误）。<br></li>
<li>单击 Headers 选项卡添加任何标题。 我们在这里添加了一个 “Accept：application / json”标头。 在标题右侧，有一个“body”选项卡。 它是灰色的，因为这是一个 GET 请求，但是如果您正在进行 POST 或 PUT 请求，则可以指定请求正文。 还要注意标题左边的授权标签。 您可以在此添加 OAuth 等授权。<br></li>
<li>这是您将在其中找到伴随响应的 HTTP 状态代码。 该调用返回 200 OK 状态。<br></li>
<li>JSON 格式可以以 “pretty” 的形式返回。 这使得读取 JSON 响应非常容易，看看它是如何嵌套的！<br></li>
<li>您可以使用选项卡一次使用多个API调用。<br></li>
<li>发送按钮是不言自明的。 配置完呼叫后，单击发送以发出请求。<br></li>
<li>您甚至可以保存API调用以供将来使用。 这在多天项目工作时特别有用。<br><br><img src="http://ot86l2rm2.bkt.clouddn.com/17-10-30/87237451.jpg" alt=""></li>
</ol>
]]></content>
      
        <categories>
            
            <category> Postman </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Postman </tag>
            
            <tag> API </tag>
            
            <tag> weather </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python 调用和风天气 API 查询各个城市天气]]></title>
      <url>/2017/10/25/python-API/</url>
      <content type="html"><![CDATA[<p>和风天气 API 接口介绍 <a href="https://www.heweather.com/" target="_blank" rel="external">https://www.heweather.com/</a></p>
<h4 id="接口地址"><a href="#接口地址" class="headerlink" title="接口地址"></a>接口地址</h4><table>
<thead>
<tr>
<th>#</th>
<th>服务器节点</th>
<th>接口地址</th>
</tr>
</thead>
<tbody>
<tr>
<td>免费</td>
<td>中国</td>
<td><a href="https://free-api.heweather.com/v5/" target="_blank" rel="external">https://free-api.heweather.com/v5/</a></td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h4 id="请求实例"><a href="#请求实例" class="headerlink" title="请求实例"></a>请求实例</h4><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>选择</th>
<th>示例值</th>
</tr>
</thead>
<tbody>
<tr>
<td>city</td>
<td>城市名称，city可通过城市中英文名称、ID、IP和经纬度进行查询，经纬度查询格式为：经度,纬度</td>
<td>必选</td>
<td>city=北京，city=beijing，city=CN101010100，city= 60.194.130.1，city=120.343,36.088</td>
</tr>
<tr>
<td>key</td>
<td>用户认证key</td>
<td>必选</td>
<td>your key</td>
</tr>
<tr>
<td>lang</td>
<td>多语言，可以不使用该参数，默认为中文</td>
<td>可选</td>
<td>详见多语言参数值</td>
</tr>
</tbody>
</table>
<p><a href="https://free-api.heweather.com/v5/weather?city=CN101010100&amp;key=yourkey" target="_blank" rel="external">https://free-api.heweather.com/v5/weather?city=CN101010100&amp;key=yourkey</a><br>和风天气支持多语言，可以使用lang参数在调用数据时设定需要的语言。比如：<br><a href="https://free-api.heweather.com/v5/weather?city=CN101010100&amp;key=你的key&amp;lang=en" target="_blank" rel="external">https://free-api.heweather.com/v5/weather?city=CN101010100&amp;key=你的key&amp;lang=en</a></p>
<p>默认国内城市采用简体中文，海外城市采用英文，默认状态不用添加lang参数。</p>
<h4 id="数据返回实例"><a href="#数据返回实例" class="headerlink" title="数据返回实例"></a>数据返回实例</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"HeWeather5"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="string">"alarms"</span>: [</div><div class="line">                &#123;</div><div class="line">                    <span class="string">"level"</span>: <span class="string">"蓝色"</span>,</div><div class="line">                    <span class="string">"stat"</span>: <span class="string">"预警中"</span>,</div><div class="line">                    <span class="string">"title"</span>: <span class="string">"山东省青岛市气象台发布大风蓝色预警"</span>,</div><div class="line">                    <span class="string">"txt"</span>: <span class="string">"青岛市气象台2016年08月29日15时24分继续发布大风蓝色预警信号：预计今天下午到明天，我市北风风力海上6到7级阵风9级，陆地4到5阵风7级，请注意防范。"</span>,</div><div class="line">                    <span class="string">"type"</span>: <span class="string">"大风"</span></div><div class="line">                &#125;</div><div class="line">            ],</div><div class="line">            <span class="string">"aqi"</span>: &#123;</div><div class="line">                <span class="string">"city"</span>: &#123;</div><div class="line">                    <span class="string">"aqi"</span>: <span class="string">"60"</span>,</div><div class="line">                    <span class="string">"co"</span>: <span class="string">"0"</span>,</div><div class="line">                    <span class="string">"no2"</span>: <span class="string">"14"</span>,</div><div class="line">                    <span class="string">"o3"</span>: <span class="string">"95"</span>,</div><div class="line">                    <span class="string">"pm10"</span>: <span class="string">"67"</span>,</div><div class="line">                    <span class="string">"pm25"</span>: <span class="string">"15"</span>,</div><div class="line">                    <span class="string">"qlty"</span>: <span class="string">"良"</span>,  //共六个级别，分别：优，良，轻度污染，中度污染，重度污染，严重污染</div><div class="line">                    <span class="string">"so2"</span>: <span class="string">"10"</span></div><div class="line">                &#125;</div><div class="line">            &#125;,</div></pre></td></tr></table></figure>
<h4 id="源程序"><a href="#源程序" class="headerlink" title="源程序"></a>源程序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># !python2</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> urllib2, json</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line"><span class="comment">#调用和风天气的API city可以通过https://cdn.heweather.com/china-city-list.txt城市列表获取</span></div><div class="line"></div><div class="line">appkey = <span class="string">'2edd11dc019b43b2bd53406f5e255a41'</span></div><div class="line">cityName = raw_input(<span class="string">'请输入查询的地名：'</span>)</div><div class="line"><span class="keyword">print</span> cityName</div><div class="line">value = &#123;<span class="string">'city'</span>: cityName,</div><div class="line">         <span class="string">'key'</span>: appkey,</div><div class="line">         &#125;</div><div class="line">url = <span class="string">'https://free-api.heweather.com/v5/weather'</span></div><div class="line">s = requests.get(url, params=value)</div><div class="line"><span class="keyword">print</span> s.url</div><div class="line">url = s.url</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 用urllib2创建一个请求并得到返回结果</span></div><div class="line">req = urllib2.Request(url)</div><div class="line">resp = urllib2.urlopen(req).read()</div><div class="line"><span class="comment"># print resp</span></div><div class="line"><span class="comment"># print type(resp)</span></div><div class="line"></div><div class="line"><span class="comment"># 将JSON转化为Python的数据结构</span></div><div class="line">json_data = json.loads(resp)</div><div class="line">city_data = json_data[<span class="string">'HeWeather5'</span>][<span class="number">0</span>]</div><div class="line">hourly_data = json_data[<span class="string">'HeWeather5'</span>][<span class="number">0</span>][<span class="string">'hourly_forecast'</span>]</div><div class="line">daily_data = json_data[<span class="string">'HeWeather5'</span>][<span class="number">0</span>][<span class="string">'daily_forecast'</span>]</div><div class="line"><span class="comment"># print json_data</span></div><div class="line"><span class="keyword">print</span> <span class="string">u'当前时间：'</span> + daily_data[<span class="number">0</span>][<span class="string">'date'</span>]</div><div class="line"><span class="keyword">print</span> <span class="string">u'城市：'</span> + city_data[<span class="string">'basic'</span>][<span class="string">'city'</span>]</div><div class="line"><span class="keyword">print</span> <span class="string">u'PM指数：'</span> + city_data[<span class="string">'aqi'</span>][<span class="string">'city'</span>][<span class="string">'pm25'</span>]</div><div class="line"><span class="keyword">print</span> <span class="string">u'白天天气：'</span> + daily_data[<span class="number">0</span>][<span class="string">'cond'</span>][<span class="string">'txt_d'</span>]</div><div class="line"><span class="keyword">print</span> <span class="string">u'夜间天气：'</span> + daily_data[<span class="number">0</span>][<span class="string">'cond'</span>][<span class="string">'txt_n'</span>]</div><div class="line"><span class="keyword">print</span> <span class="string">u'今天&#123;0&#125;: 气温：&#123;1&#125;°/&#123;2&#125;°'</span>.format(str(daily_data[<span class="number">0</span>][<span class="string">'date'</span>]), daily_data[<span class="number">0</span>][<span class="string">'tmp'</span>][<span class="string">'min'</span>],</div><div class="line">                                    daily_data[<span class="number">0</span>][<span class="string">'tmp'</span>][<span class="string">'max'</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">u'未来小时天气：&#123;0&#125; &#123;1&#125;'</span>.format(str(hourly_data[<span class="number">0</span>][<span class="string">'date'</span>]).split()[<span class="number">1</span>], hourly_data[<span class="number">0</span>][<span class="string">'cond'</span>][<span class="string">'txt'</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">u'未来小时天气：&#123;0&#125; &#123;1&#125;'</span>.format(str(hourly_data[<span class="number">1</span>][<span class="string">'date'</span>]).split()[<span class="number">1</span>], hourly_data[<span class="number">1</span>][<span class="string">'cond'</span>][<span class="string">'txt'</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">u'未来小时天气：&#123;0&#125; &#123;1&#125;'</span>.format(str(hourly_data[<span class="number">2</span>][<span class="string">'date'</span>]).split()[<span class="number">1</span>], hourly_data[<span class="number">2</span>][<span class="string">'cond'</span>][<span class="string">'txt'</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">u'未来&#123;0&#125; 天气：&#123;1&#125;°/&#123;2&#125;°'</span>.format(daily_data[<span class="number">1</span>][<span class="string">'date'</span>], daily_data[<span class="number">1</span>][<span class="string">'tmp'</span>][<span class="string">'min'</span>], daily_data[<span class="number">1</span>][<span class="string">'tmp'</span>][<span class="string">'max'</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">u'未来&#123;0&#125; 天气：&#123;1&#125;°/&#123;2&#125;°'</span>.format(daily_data[<span class="number">2</span>][<span class="string">'date'</span>], daily_data[<span class="number">1</span>][<span class="string">'tmp'</span>][<span class="string">'min'</span>], daily_data[<span class="number">2</span>][<span class="string">'tmp'</span>][<span class="string">'max'</span>])</div><div class="line"><span class="keyword">print</span> <span class="string">u'穿衣建议：'</span> + json_data[<span class="string">'HeWeather5'</span>][<span class="number">0</span>][<span class="string">'suggestion'</span>][<span class="string">'drsg'</span>][<span class="string">'txt'</span>]</div></pre></td></tr></table></figure>
<h4 id="运行截图"><a href="#运行截图" class="headerlink" title="运行截图"></a>运行截图</h4><p><img src="http://ot86l2rm2.bkt.clouddn.com/17-10-25/51657758.jpg" alt=""></p>
<h4 id="Chrome插件-JSON-handle"><a href="#Chrome插件-JSON-handle" class="headerlink" title="Chrome插件-JSON-handle"></a>Chrome插件-JSON-handle</h4><p><img src="http://ot86l2rm2.bkt.clouddn.com/17-10-25/13845195.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> API </tag>
            
            <tag> weather </tag>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[BadGenius觀後感想]]></title>
      <url>/2017/10/15/BadGenius/</url>
      <content type="html"><![CDATA[<p><img src="http://ot86l2rm2.bkt.clouddn.com/17-10-15/10627435.jpg" alt=""></p>
<a id="more"></a>
<h3 id="前情回顾"><a href="#前情回顾" class="headerlink" title="前情回顾"></a>前情回顾</h3><p>影片根据2014年轰动一时的亚洲考场作弊案改编，讲述了天才学霸利用高智商考场作弊牟取暴利的故事。出生平凡的天才少女Lynn（茱蒂蒙·琼查容苏因 饰）在进入贵族学校后，结识了富二代同学Grace（依莎亚·贺苏汪饰）与Pat（披纳若·苏潘平佑饰），从此开始了考场作弊生涯，与此同时，另一名记忆力极佳的天才学霸Bank（查侬·散顶腾古 饰）发现了Lynn不为人知的“交易”。经过多场险象环生的“作弊战争”后，Lynn接下最后一单在国际考场上为富家子弟作弊的天价委托。一场横跨两大洲的完美作弊方案横空出世，然而一切并不像他们想的那么简单……</p>
<h3 id="故事原型"><a href="#故事原型" class="headerlink" title="故事原型"></a>故事原型</h3><p>《天才枪手》根据2014年轰动一时的亚洲考场作弊案改编，2014年在亚洲地区国家举行的SAT考试发生大规模泄露，影响包括中国在内的1万余名考生。</p>
<p>SAT的出题机构，一般会使用在美国考过的考卷，作为亚洲区试题。在亚洲的考生会想法设法拿到考题，更严重的事，有些考试培训机构，会派人到美国本土参加考试，记住考题，或者非法偷拍收集后，以真题为噱头，进行招生，以此谋利。</p>
<p>2014年10月，SAT作弊事件被曝出后，监考机构ETS调查确认某些考生作弊，考生成绩随后被取消。该事件不仅改写了中国、韩国、泰国、日本等国家，无数考生的命运，也引发了社会激烈讨论。</p>
<p>《天才枪手》将故事还原，快速的剪辑，精巧的构思，将作弊拍得惊心动魄，跌宕起伏，堪比谍战大片，非常精彩。</p>
<p><img src="http://ot86l2rm2.bkt.clouddn.com/17-10-15/41954678.jpg" alt=""></p>
<h3 id="作弊手段"><a href="#作弊手段" class="headerlink" title="作弊手段"></a>作弊手段</h3><p>手段1 ：鞋子传递橡皮擦<br>手段2 ：四首简单的钢琴曲分别代表ABCD，用手指来传答案<br>手段3： 美国顶尖大学的STIC考试，利用时差，让两位男主女主飞到最先开考的悉尼参加考试，将答案发给在泰国的其他同学。这场国际大案中，Lynn的报酬是200万泰铢，Bank同学是100万泰铢（心里不平衡，发答案前临时加价）</p>
<h3 id="人物象征"><a href="#人物象征" class="headerlink" title="人物象征"></a>人物象征</h3><p><img src="http://ot86l2rm2.bkt.clouddn.com/17-10-15/44076669.jpg" alt=""></p>
<p>女主Lynn：全能学霸，橡皮写答案，皮鞋传橡皮。5名同学每科3000泰铢雇佣，钢琴音符代表答案，记住指法稳操胜券。全额出国奖学金和Bank是有力竞争者。</p>
<p>女二Grace：家境富足，认真上课仍然听不懂，需要Lynn的协助考试及格。</p>
<p>男主Bank：三好学生，勤奋努力，家境贫寒，正直公道。学习改变洗衣家庭的命运，梦想全额出国奖学金。</p>
<p>男二Pat：标准富二代，与女二Grace为男女朋友，父母安排出国，无奈凭借自己能力无法通过考试，求学霸男主女主协助。后灵机一动，发展成为小产业，小赚一笔。在这次作案活动中负责客户资源，教室宣讲，在泰国接收悉尼的答案，组织摩托车接送考试。</p>
<h3 id="Bank是如何走向堕落的"><a href="#Bank是如何走向堕落的" class="headerlink" title="Bank是如何走向堕落的"></a>Bank是如何走向堕落的</h3><p><img src="http://ot86l2rm2.bkt.clouddn.com/17-10-15/58051251.jpg" alt=""></p>
<ul>
<li><p>正直努力的三好穷学生，拒绝小东的利诱，交卷的时候提醒Lynn有人抄她答案，到校长处揭露抄袭。</p>
</li>
<li><p>Bank被揍错过奖学金考试，主动找Lynn加入作弊计划</p>
</li>
<li><p>得知被揍是Pat安排后愤怒离去，却又拎着行李回来，向黑暗势力妥协。</p>
</li>
<li><p>在考完part 1 ，按照原计划在厕所里传答案，临时加价100万，才继续实施下一步计划， 为了金钱不择手段，彻底黑化。</p>
</li>
</ul>
<h3 id="这个世界是不公平的"><a href="#这个世界是不公平的" class="headerlink" title="这个世界是不公平的"></a>这个世界是不公平的</h3><p>剧中，女二Grace交钱给老师就能拿到考试原题，考场上还是不会做，傻白甜形象跃然纸上。贵族学校每位学生都收赞助费，剧中表现的很隐晦，和中国的教育环境何其相似。教育资源的不公平体现在，富二代花钱就能上的贵族学校，Lynn是靠品学兼优被学校选中，减免了午餐费用。对于大多数类似于Lynn家境的孩子是不可能来上这所学校的。</p>
<p>富二代的结局还是富二代，是天生的赢家，和女友一起顺利出国留学。按照富二代的玩法在走。形成鲜明对比的是，Bank 妈妈在他退学书上颤抖的签字，Bank最后动起了歪脑筋，想在其他考试中用此法继续作弊获利。</p>
<h3 id="作弊时我的心理活动"><a href="#作弊时我的心理活动" class="headerlink" title="作弊时我的心理活动"></a>作弊时我的心理活动</h3><p><img src="http://ot86l2rm2.bkt.clouddn.com/17-10-15/13723389.jpg" alt=""></p>
<p>在大学一年级的期末考试中，我清楚的记得在某个冬天的下午，考试科目是C语言。4个学分。我坐在教室的最后一排，监考老师宣读：将与考试无关的物品上交到讲台。我偷偷将上课记下的笔记放在了桌子下面。没有乖乖上交。</p>
<p>平时学的扎实，试卷做的很顺利，直到倒数后两题是编程题，拿捏不准。我清楚记得笔记上有原题。在离考试结束还有15分钟，实在安奈不住了，偷偷翻开笔记，被讲台上的监考老师当场喝住。</p>
<p>我被吓傻了，笔记掉在地上，我面如死灰。</p>
<p>机械地任凭老师收去我的笔记和试卷，被赶出了考场。</p>
<p>打电话和我妈说了下作弊被抓的事情，我妈焦急地问：“怎么处理啊？”</p>
<p>“可能被开除吧！”我绝望地说道。</p>
<p>下午五点钟，我被通知到老师办公室里。年轻的女老师把门一关，只剩下我和她两个人。</p>
<p>我心脏都快要跳出来了，这特妈的要干神马呢？</p>
<p>终于，女老师说，“ 看在你平时上课认真听讲的份儿上，这场作弊的事情我帮你顶下来了，没有上报给学校。”</p>
<p>我心里一顿暗爽。</p>
<p>“但是，希望你引以为戒，不要和其他同学大肆宣扬。”</p>
<p>一定一定一定。我兴奋地离开了办公室。</p>
<p>这件事情大学毕业前我没有和任何人提起过，但在任何一场考试中，没有在做过弊。</p>
<blockquote>
<p>就算你不作弊这个世界照样欺骗你</p>
</blockquote>
<p>金钱欲望刺激下，原本正直善良的bank 利益熏黑，为几牟利，成为一个利己主义者，是我们现实生活中大多数人的写照了。通过违背规则的方式获利，一方面需要承担被抓包的风险，一方面如果作弊人数超过一定数量的话，法不责众。利益好规则博弈间，如何权衡，靠个人去选择了。</p>
<p>退一步讲，即使Pat富二代无法通过SAT考试出国，一定可以有其他方式获得更好的教育资源。而Bank退学后走投无路只能选择家庭的洗衣房过活。</p>
<p>就算不作弊，也无法改变这个世界的游戏规则，努力改变是好事，当无力改变的时候，也请保持一颗赤诚之心，抓住一切可以改变的机会。如果决定做一个好人，这个世界会因为你而变得美好一点点。</p>
]]></content>
      
        <categories>
            
            <category> 电影 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 天才枪手 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[书单]]></title>
      <url>/2017/09/16/%E4%B9%A6%E5%8D%95%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
      <content type="html"><![CDATA[<p>2016阅读书单</p>
<style type="text/css">

table th:first-of-type {
    width: 10%;
    Color: white;

}
table th:nth-of-type(2) {
    width: 50%;
    Color: white;
}
table th:nth-of-type(3) {
    width: 20%;
    Color: white;
}

table th:nth-of-type(4) {
    Color: white;

}

table tr:first-of-type {
    background-color:#000000;
}

@media only screen and (max-width: 640px) {
    table td:nth-of-type(3) {display: none; visibility: hidden;}
    table th:nth-of-type(3) {display: none; visibility: hidden;}
    table td:nth-of-type(4) {display: none; visibility: hidden;}
    table th:nth-of-type(4) {display: none; visibility: hidden;}
} 

</style>


<table>
<thead>
<tr>
<th>#</th>
<th>BookName</th>
<th>BookType</th>
<th>Score</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>Python编程快速上手 —让繁琐工作自动化</td>
<td>Python</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>Web接口开发与自动化测试</td>
<td>Django,接口测试</td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>大话APP测试—移动互联网产品测试实录</td>
<td>测试经验</td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>Python 核心编程</td>
<td>测试技术</td>
<td></td>
</tr>
<tr>
<td>5</td>
<td>RobotFramework 自动化测试</td>
<td>测试技术</td>
<td></td>
</tr>
</tbody>
</table>
<a id="more"></a>
<p>目前在读的书单如下：</p>
<table>
<thead>
<tr>
<th>#</th>
<th>BookName</th>
<th>BookType</th>
<th>Score</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>万历十五年</td>
<td>历史</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>史蒂夫乔布斯</td>
<td>人物传记</td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>testtesttesttest</td>
<td>testtest</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 书单 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 书单 </tag>
            
            <tag> 读书 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[你的同事已经下线]]></title>
      <url>/2017/09/11/%E4%BD%A0%E7%9A%84%E5%90%8C%E4%BA%8B%E5%B7%B2%E7%BB%8F%E4%B8%8B%E7%BA%BF/</url>
      <content type="html"><![CDATA[<p>日子一天一天过去了，不咸不淡。<br>从过完年的跳槽季开始，HR 的门槛就被踏烂了。<br>皮斌慧等一大批小伙伴陆续离职，倒也没有什么好伤感的。<br>转眼间，到了某A公司的盈利达到7年历史新低后，新一轮的裁员工作开始了，HR的门槛又烂了。<br>本次裁员的重灾区是我们手机部门，📱，作为一家传统的硬体PC制造商，跨足移动领域三年之久，不盈利的状况下势必要调整啊。<br><a id="more"></a><br>周扬部门连Leader整体被裁员，隔壁VD我发小部门，10人团队裁的还剩下4个人。本来应该有点忧伤的裁员风波，却有点开心的意思。周末发小口头上约我吃饭，势必是补偿款到账了。（3+1）<br>我们部门一开始放进大池子里（官方称为Talent Pool），现在成立一个新的FU单位，没有在此次裁员之列，真是可惜呀。<br>面对一上班，就自习的工作状态，Zoe同志选择考研这条路还是挺好的。<br>因为我现在自学的非常吃力，分分钟想放弃，也想随了Zoe、前前前任33、前前任非洲单老师一起去考研。<br>瞎胡乱查了一圈考研专业、院校、排名，专业课、面试，一上午的时光是耗完了。让我想起来犹豫不决的大三下学期。哈哈<br>反观现在读研的同学，秀美，万梦，爱华，我反问自己的优势在哪里呢？他们读完研的优势明显吗？并不明显。<br><br><strong>读研的劣势：</strong></p>
<blockquote>
<p>创新能力不够，不能造轮子，就会瞎抄抄，从历次的课程设计和毕业设计可以看出来<br>因为需要钱而考一个研究生，毕业后能不能回本都是未知<br>我情商这么低，再读研就读的傻了吧唧的，不会是个傻子吧</p>
</blockquote>
<p><strong>职业发展亟需转变，该怎么办呢？</strong></p>
<blockquote>
<p>选好自动化测试方向，针对某一岗位需求学习<br>近期学好Appium再说其他的技术，需要时间积累，不能速成<br>坚定自己的信念，咱们不虚，未来没有什么好害怕的，加油</p>
</blockquote>
<p>现在是小屌丝，不努力的话，就是大龄屌丝了。</p>
]]></content>
      
        <categories>
            
            <category> 日志 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[给左薇]]></title>
      <url>/2017/09/07/%E7%BB%99%E5%B7%A6%E8%96%87/</url>
      <content type="html"><![CDATA[<p>Zoe打包完东西，离开办公室的时候，我也没有送她。</p>
<p>她就这样离开公司了。</p>
<p>从毕业到现在整整2年了，时间过得好快，在指缝间悄悄溜走了。</p>
<a id="more"></a>
<iframe height="498" width="510" src="http://player.youku.com/embed/XMzAxMTY1OTM5Ng==" frameborder="0" 'allowfullscreen'=""></iframe>


<p>对于Zoe离职的选择我是支持的，目前的工作状态很不好，公司组织架构调整，大批量裁员，工作内容减少，处于自我学习的时间。她男友即将毕业，她有时间和精力再去读个三年研究生。</p>
<p>我们的革命友谊体现在工作上的互帮互助。能有很多的话题可以聊，有相似的价值观念。</p>
<p>她很聪明，给我很多的指导性意见。</p>
<p>愿她在这条路上越走越好，我坐车。</p>
]]></content>
      
        <categories>
            
            <category> 二三事 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日志 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[上海两日]]></title>
      <url>/2017/08/30/%E4%B8%8A%E6%B5%B7%E4%BA%8C%E6%97%A5/</url>
      <content type="html"><![CDATA[<p>随着8.24 在上海海事大厦张榜公布成绩后，我这个夏天的考试计划正式完结了。成绩如下：</p>
<p><img src="http://ot86l2rm2.bkt.clouddn.com/WeChat%20%E5%9C%96%E7%89%87_20170825102055.jpg" alt="考试成绩单"></p>
<p>结果还是挺让人感到意外的。</p>
<a id="more"></a>
<p>22号我请了3天假，一天在家里复习，一天去上海资格审查，一天用来面试。想不到好友曹奎顺也在上海出差，真的是很巧合。更为巧合的是，我从苏州车站到达上海火车站的时候，在上海4号线地铁上，竟然遇见了她。这不是缘分是什么。</p>
<p>这是我第二次去拷上海海事局了，照片后的职位代码是271006，我205年大学毕业时考的岗位是271008，我这次考的是环境污染著称的燕尾港航标站。</p>
<p>从8-4号接到面试通知，直到靠前一天的晚上，我都在酒店的房间里面背书。承受了很大的压力、焦虑和紧张感。但是同时，我也做出了预判：考上的话要充分考虑工资待遇和环境污染，再做权衡。我爸有说后续会帮忙找关系进行工作调动。</p>
<p>早晨在酒店吃早餐的时候，新闻30分播报天鸽台风袭击珠海，我在WeChat上问张笑：</p>
<p>“台风这么大，没有被吹跑吧？”</p>
<p>“珠海不能呆了”</p>
<p>是的， 再过几个月她就工作调动到无锡了，和她男朋友一起同样在交通银行里面工作。</p>
<p>早晨7:30到达虹口足球场附近的海事大楼，我提前到附近的全家买了一杯美式咖啡，加糖加奶。场景和2年前一摸一样的。</p>
<p>被工作人员引领至22楼后，宣读考试纪律和考场规则，抽签，没收通讯工具。我被分在第二验证组，抽签是第四位，和2年前坐在同一个座位上。现在心情缓和了很多。接下来就是漫长的等待。</p>
<p>旁边都是一个岗位的竞争者，大家都保持沉默，以免影响考试情绪。场面一度很尴尬。尤其是271006这个岗位5个面试者，竞争尤为激烈。</p>
<p>十点十分的时候我被带到等候室，里面分别是四位不同组别的候考者，气氛凝重，每个人都在试图调整情绪，放松心情。</p>
<p>十点三十五我被工作人员带领着23楼，直接进入考场。在草稿纸上我迅速写下了三个数字533，希望能保佑我。</p>
<p>一共面试了四道题目：</p>
<p>1.梅花香自苦寒来，宝剑锋从磨砺出，结合自身性格特点和岗位要求，谈谈你对这句话的理解</p>
<p>2.你们单位要组织一次，专业技能比赛。该如何组织</p>
<p>3.当紧急任务出现时，你的直接领导和上级领导意见不一致，你该怎么办</p>
<p>4.目前社会上出现共享宿舍的问题，请谈谈你的看法</p>
<p>我四道题目答得都还可以，自我感觉满意，很少有卡顿的尴尬情况。是发挥最好的一次面试。而且比我之前和哥哥模拟的时候，好得很多走出考场时候，一脸喜悦。不一会儿成绩出来了，82.6分，非常满意了。</p>
<p>回酒店的路上，我和哥哥通了电话说了这一情况。</p>
<p>中午请曹奎顺在上海一家特色菜馆里吃午饭，聊了很多关于学习，工作，感情，性格方面的东西。然后便送他去上海虹桥火车站。</p>
<p><img src="http://ot86l2rm2.bkt.clouddn.com/withCao.jpg" alt=""></p>
<p>怀着忐忑不安的心情回到海事大楼时候是下午4点半，已经没有多少考生在楼下了。大家看完成绩就各个回家了。</p>
<p>我看到的就是上面的贴图情况。</p>
<p>参加体检的同学是今天颜值最高的，不得不承认比我要帅一些。笔试分数和我一样的情况下，面试狂砍87分，成功逆袭。笔试第一的孩子以0.9分之差落败，事实就是这么残酷啊。我在海事大厦下看了一会，在WeChat上告诉了几位关心我的同事、朋友，变去上海站坐火车回苏州了。因为已经结束了。</p>
<p>简单吃了一点东西后，我便去木渎K歌了，一个人的KTV，我从11点唱到早晨5点，睡两个半小时去公司上班，状态还可以的。</p>
<p>帅哥绝壁是本次考试的一匹黑马，如果没有他的出现，笔试第一的人就可以上位了。仍然没有我的事情。</p>
<p>上午在网上查了燕尾港的相关情况，化工厂环境污染等说明它不是一个没有故事的小港。我反复问过自己一千次，如果考上燕尾港真的愿意去吗？</p>
<p>祸兮福之所倚，福兮祸之所伏。</p>
<p>一切都是最好的安排。</p>
<p>收拾好情绪，重新上路出发。</p>
]]></content>
      
        <categories>
            
            <category> 二三事 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 日志 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[背影]]></title>
      <url>/2017/08/25/%E8%83%8C%E5%BD%B1/</url>
      <content type="html"><![CDATA[<p>我与父亲不相见已二年余了，我最不能忘记的是他的背影。那年冬天，祖母死了，父亲的差使也交卸了，正是祸不单行的日子，我从北京到徐州，打算跟着父亲奔丧回家。到徐州见着父亲，看见满院狼藉的东西，又想起祖母，不禁簌簌地流下眼泪。父亲说，“事已如此，不必难过，好在天无绝人之路！”<br><a id="more"></a><br>　　回家变卖典质，父亲还了亏空；又借钱办了丧事。这些日子，家中光景很是惨淡，一半为了丧事，一半为了父亲赋闲。丧事完毕，父亲要到南京谋事，我也要回北京念书，我们便同行。<br>　　到南京时，有朋友约去游逛，勾留了一日；第二日上午便须渡江到浦口，下午上车北去。父亲因为事忙，本已说定不送我，叫旅馆里一个熟识的茶房陪我同去。他再三嘱咐茶房，甚是仔细。但他终于不放心，怕茶房不妥帖；颇踌躇了一会。其实我那年已二十岁，北京已来往过两三次，是没有甚么要紧的了。他踌躇了一会，终于决定还是自己送我去。我两三回劝他不必去；他只说，“不要紧，他们去不好！”<br>　　我们过了江，进了车站。我买票，他忙着照看行李。行李太多了，得向脚夫行些小费，才可过去。他便又忙着和他们讲价钱。我那时真是聪明过分，总觉他说话不大漂亮，非自己插嘴不可。但他终于讲定了价钱；就送我上车。他给我拣定了靠车门的一张椅子；我将他给我做的紫毛大衣铺好坐位。他嘱我路上小心，夜里警醒些，不要受凉。又嘱托茶房好好照应我。我心里暗笑他的迂；他们只认得钱，托他们直是白托！而且我这样大年纪的人，难道还不能料理自己么？唉，我现在想想，那时真是太聪明了！<br>　　我说道，“爸爸，你走吧。”他望车外看了看，说，“我买几个橘子去。你就在此地，不要走动。”我看那边月台的栅栏外有几个卖东西的等着顾客。走到那边月台，须穿过铁道，须跳下去又爬上去。父亲是一个胖子，走过去自然要费事些。我本来要去的，他不肯，只好让他去。我看见他戴着黑布小帽，穿着黑布大马褂，深青布棉袍，蹒跚地走到铁道边，慢慢探身下去，尚不大难。可是他穿过铁道，要爬上那边月台，就不容易了。他用两手攀着上面，两脚再向上缩；他肥胖的身子向左微倾，显出努力的样子。这时我看见他的背影，我的泪很快地流下来了。我赶紧拭干了泪，怕他看见，也怕别人看见。我再向外看时，他已抱了朱红的橘子望回走了。过铁道时，他先将橘子散放在地上，自己慢慢爬下，再抱起橘子走。到这边时，我赶紧去搀他。他和我走到车上，将橘子一股脑儿放在我的皮大衣上。于是扑扑衣上的泥土，心里很轻松似的，过一会说，“我走了；到那边来信！”我望着他走出去。他走了几步，回过头看见我，说，“进去吧，里边没人。”等他的背影混入来来往往的人里，再找不着了，我便进来坐下，我的眼泪又来了。<br>　　近几年来，父亲和我都是东奔西走，家中光景是一日不如一日。他少年出外谋生，独力支持，做了许多大事。那知老境却如此颓唐！他触目伤怀，自然情不能自已。情郁于中，自然要发之于外；家庭琐屑便往往触他之怒。他待我渐渐不同往日。但最近两年的不见，他终于忘却我的不好，只是惦记着我，惦记着我的儿子。我北来后，他写了一信给我，信中说道，“我身体平安，惟膀子疼痛利害，举箸提笔，诸多不便，大约大去之期不远矣。”我读到此处，在晶莹的泪光中，又看见那肥胖的，青布棉袍，黑布马褂的背影。唉！我不知何时再能与他相见！<br>　<br>　　1925年10月在北京。</p>
]]></content>
      
        <categories>
            
            <category> 读书 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[自动化测试之monkeyrunner]]></title>
      <url>/2017/08/02/MonkeyRunner/</url>
      <content type="html"><![CDATA[<h2 id="Monkeyrunner简介"><a href="#Monkeyrunner简介" class="headerlink" title="Monkeyrunner简介"></a>Monkeyrunner简介</h2><p>monkeyrunner即android SDK中自带的工具之一，此工具提供API可按制android设备或模拟器。</p>
<p>monkeyrunner提供了一个API，使用此API写出的程序可以在Android代码之外控制Android设备和模拟器。通过monkeyrunner，您可以写出一个Python程序去安装一个Android应用程序或测试包，运行它，向它发送模拟击键，截取它的用户界面图片，并将截图存储于工作站上。</p>
<p>monkeyrunner工具的主要目的是用于测试功能/框架水平上的应用程序和设备，或用于运行单元测试套件，但您当然也可以将其用于其它目的。</p>
<h2 id="Monkeyrunner工具特性"><a href="#Monkeyrunner工具特性" class="headerlink" title="Monkeyrunner工具特性"></a>Monkeyrunner工具特性</h2><p><strong>多设备控制：</strong>monkeyrunner API可以跨多个设备或模拟器实施测试套件。您可以在同一时间接上所有的设备或一次启动全部模拟器（或统统一起），依据程序依次连接到每一个，然后运行一个或多个测试。您也可以用程序启动一个配置好的模拟器，运行一个或多个测试，然后关闭模拟器。</p>
<p><strong>功能测试：</strong>monkeyrunner可以为一个应用自动化功能测试。为您提供按键或触摸事件的输入数值，然后观察输出结果的截屏。       </p>
<p><strong>回归测试：</strong>monkeyrunner可以运行某个应用，并将其结果截屏与既定已知正确的结果截屏相比较，以此测试应用的稳定性。       </p>
<p><strong>可扩展的自动化：</strong>由于monkeyrunner是一个API工具包，您可以基于Python模块和程序开发一整套系统，以此来控制Android设备。除了使用monkeyrunner    API之外，您还可以使用标准的Python    os和subprocess模块来调用如adb这样的Android工具。    </p>
<h2 id="Monkeyrunner工具同Monkey工具的差别"><a href="#Monkeyrunner工具同Monkey工具的差别" class="headerlink" title="Monkeyrunner工具同Monkey工具的差别"></a>Monkeyrunner工具同Monkey工具的差别</h2><p>Monkey：</p>
<p>Monkey工具直接运行在设备或模拟器的adb shell中，生成用户或系统的伪随机事件流。</p>
<p>Monkeyrunner：</p>
<p>Monkeyrunner工具是在工作站上通过API定义的特定命令和事件控制设备或模拟器。</p>
<h2 id="运行Monkeyrunner"><a href="#运行Monkeyrunner" class="headerlink" title="运行Monkeyrunner"></a>运行Monkeyrunner</h2><p>Monkeyrunner API<br>主要包括三个模块<br>1、MonkeyRunner:这个类提供了用于连接monkeyrunner和设备或模拟器的方法，它还提供了用于创建用户界面显示提供了方法。<br>2、MonkeyDevice:代表一个设备或模拟器。这个类为安装和卸载包、开启Activity、发送按键和触摸事件、运行测试包等提供了方法。<br>3、MonkeyImage:这个类提供了捕捉屏幕的方法。这个类为截图、将位图转换成各种格式、对比两个MonkeyImage对象、将image保存到文件等提供了方法。</p>
<p>‘’‘Python</p>
<h1 id="引用导入API"><a href="#引用导入API" class="headerlink" title="引用导入API"></a>引用导入API</h1><p>from com.android.monkeyrunner import <module><br>’‘’</module></p>
<p>运行monkeyrunner<br>命令语法为：<br>‘’‘Python</p>
<p>monkeyrunner -plugin <plugin_jar> <program_filename> <program_options><br>’‘’<br>方式一：在CMD命令窗口直接运行monkeyrunner</program_options></program_filename></plugin_jar></p>
<p>方式二：使用Python编写测试代码文件，在CMD中执行monkeyrunner Findyou.py运行</p>
<p>不论使用哪种方式，您都需要调用SDK目录的tools子目录下的monkeyrunner命令。</p>
<p>注意：在运行monkeyrunner之前必须先运行相应的模拟器或连接真机，否则monkeyrunner无法连接到设备</p>
]]></content>
      
        <categories>
            
            <category> Test </category>
            
        </categories>
        
        
        <tags>
            
            <tag> test </tag>
            
            <tag> monkeyrunner </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python必会的单元测试框架—unittest]]></title>
      <url>/2017/08/02/unittest/</url>
      <content type="html"><![CDATA[<p>unittest原名为PyUnit，是由java的JUnit衍生而来。对于单元测试，需要设置预先条件，对比预期结果和实际结果。</p>
<h3 id="整体结构："><a href="#整体结构：" class="headerlink" title="整体结构："></a>整体结构：</h3><p>unittest库提供了test cases, test suites, test fixtures，test runner：</p>
<ol>
<li>test case ：通过继承TestCase类，我们可以创建一个test，或者一组tests，包括测试前准备环境的搭建(setUp)，执行测试代码(run)，以及测试后环境的还原(tearDown)。</li>
<li>test suites ： 测试套件,多个测试用例集合在一起,TestSuite也可以嵌套TestSuite。<br>test fixtures ： setup + test case + teardown结构</li>
<li>TestLoader:用来加载TestCase到TestSuite中，其中的方法从各个地方寻找TestCase，创建它们的实例，然后add到TestSuite中，返回一个TestSuite实例。<br>test runner：执行测试用例，其中的run()会执行TestSuite/TestCase。</li>
<li>TextTestResult：测试的结果会保存到TextTestResult实例中，包括运行用例数，成功数，失败数等。</li>
</ol>
<a id="more"></a>
<p><img src="http://ot86l2rm2.bkt.clouddn.com/unittest02.png" alt="unittest"></p>
<p id="div-border-top-blue"><br>1. 一个TestCase的实例就是一个测试用例。什么是测试用例呢？就是一个完整的测试流程，包括测试前准备环境的搭建(setUp)，执行测试代码(run)，以及测试后环境的还原(tearDown)。元测试(unit test)的本质也就在这里，一个测试用例是一个完整的测试单元，通过运行这个测试单元，可以对某一个问题进行验证。<br><br>2. 而多个测试用例集合在一起，就是TestSuite，而且TestSuite也可以嵌套TestSuite。<br><br>3. TestLoader是用来加载TestCase到TestSuite中的，其中有几个loadTestsFrom__()方法，就是从各个地方寻找TestCase，创建它们的实例，然后add到TestSuite中，再返回一个TestSuite实例。<br><br>4. TextTestRunner是来执行测试用例的，其中的run(test)会执行TestSuite/TestCase中的run(result)方法。 测试的结果会保存到TextTestResult实例中，包括运行了多少测试用例，成功了多少，失败了多少等信息。<br><br>5. 而对一个测试用例环境的搭建和销毁，是一个fixture。</p>

<p>写好TestCase，然后由TestLoader加载TestCase到TestSuite，然后由TextTestRunner来运行TestSuite，运行的结果保存在TextTestResult中，我们通过命令行或者unittest.main()执行时，main会调用TextTestRunner中的run来执行，或者我们可以直接通过TextTestRunner来执行用例。这里加个说明，在Runner执行时，默认将执行结果输出到控制台，我们可以设置其输出到文件，在文件中查看结果（你可能听说过HTMLTestRunner，是的，通过它可以将结果输出到HTML中，生成漂亮的报告）。</p>
<h3 id="unittest实例"><a href="#unittest实例" class="headerlink" title="unittest实例"></a>unittest实例</h3><h4 id="mathfunc-py"><a href="#mathfunc-py" class="headerlink" title="mathfunc.py"></a>mathfunc.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a, b)</span>:</span></div><div class="line">    <span class="keyword">return</span> a+b</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">minus</span><span class="params">(a, b)</span>:</span></div><div class="line">    <span class="keyword">return</span> a-b</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">multi</span><span class="params">(a, b)</span>:</span></div><div class="line">    <span class="keyword">return</span> a*b</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">divide</span><span class="params">(a, b)</span>:</span></div><div class="line">    <span class="keyword">return</span> a/b</div></pre></td></tr></table></figure>
<h4 id="test-mathfunc-py"><a href="#test-mathfunc-py" class="headerlink" title="test_mathfunc.py"></a>test_mathfunc.py</h4><p>接下来我们为这些方法写一个测试:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> unittest</div><div class="line"><span class="keyword">from</span> mathfunc <span class="keyword">import</span> *</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestMathFunc</span><span class="params">(unittest.TestCase)</span>:</span></div><div class="line">    <span class="string">"""Test mathfuc.py"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_add</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""Test method add(a, b)"""</span></div><div class="line">        self.assertEqual(<span class="number">3</span>, add(<span class="number">1</span>, <span class="number">2</span>))</div><div class="line">        self.assertNotEqual(<span class="number">3</span>, add(<span class="number">2</span>, <span class="number">2</span>))</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_minus</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""Test method minus(a, b)"""</span></div><div class="line">        self.assertEqual(<span class="number">1</span>, minus(<span class="number">3</span>, <span class="number">2</span>))</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_multi</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""Test method multi(a, b)"""</span></div><div class="line">        self.assertEqual(<span class="number">6</span>, multi(<span class="number">2</span>, <span class="number">3</span>))</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_divide</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""Test method divide(a, b)"""</span></div><div class="line">        self.assertEqual(<span class="number">2</span>, divide(<span class="number">6</span>, <span class="number">3</span>))</div><div class="line">        self.assertEqual(<span class="number">2.5</span>, divide(<span class="number">5</span>, <span class="number">2</span>))</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    unittest.main()</div><div class="line">``` </div><div class="line">执行结果：</div><div class="line">``` python</div><div class="line">.F..</div><div class="line">======================================================================</div><div class="line">FAIL: test_divide (__main__.TestMathFunc)</div><div class="line">Test method divide(a, b)</div><div class="line">----------------------------------------------------------------------</div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"D:/py/test_mathfunc.py"</span>, line <span class="number">26</span>, <span class="keyword">in</span> test_divide</div><div class="line">    self.assertEqual(<span class="number">2.5</span>, divide(<span class="number">5</span>, <span class="number">2</span>))</div><div class="line">AssertionError: <span class="number">2.5</span> != <span class="number">2</span></div><div class="line"></div><div class="line">----------------------------------------------------------------------</div><div class="line">Ran <span class="number">4</span> tests <span class="keyword">in</span> <span class="number">0.000</span>s</div><div class="line"></div><div class="line">FAILED (failures=<span class="number">1</span>)</div><div class="line">``` </div><div class="line">能够看到一共运行了<span class="number">4</span>个测试，失败了<span class="number">1</span>个，并且给出了失败原因，<span class="number">2.5</span> != <span class="number">2</span> 也就是说我们的divide方法是有问题的。</div><div class="line"></div><div class="line">这就是一个简单的测试，有几点需要说明的：&lt;br /&gt;&lt;br /&gt;</div><div class="line">&lt;p id=<span class="string">"div-border-left-red"</span>&gt;</div><div class="line"><span class="number">1.</span> 在第一行给出了每一个用例执行的结果的标识，成功是 .，失败是 F，出错是 E，跳过是 S。从上面也可以看出，测试的执行跟方法的顺序没有关系，test_divide写在了第<span class="number">4</span>个，但是却是第<span class="number">2</span>个执行的。&lt;br /&gt;&lt;br /&gt;</div><div class="line"></div><div class="line"><span class="number">2.</span> 每个测试方法均以 test 开头，否则是不被unittest识别的。&lt;br /&gt;&lt;br /&gt;</div><div class="line"></div><div class="line"><span class="number">3.</span> 在unittest.main()中加 verbosity 参数可以控制输出的错误报告的详细程度，默认是 <span class="number">1</span>，如果设为 <span class="number">0</span>，则不输出每一用例的执行结果，即没有上面的结果中的第<span class="number">1</span>行；如果设为 <span class="number">2</span>，则输出详细的执行结果，如下：</div><div class="line">```python</div><div class="line">test_add (__main__.TestMathFunc)</div><div class="line">Test method add(a, b) ... ok</div><div class="line">test_divide (__main__.TestMathFunc)</div><div class="line">Test method divide(a, b) ... FAIL</div><div class="line">test_minus (__main__.TestMathFunc)</div><div class="line">Test method minus(a, b) ... ok</div><div class="line">test_multi (__main__.TestMathFunc)</div><div class="line">Test method multi(a, b) ... ok</div><div class="line"></div><div class="line">======================================================================</div><div class="line">FAIL: test_divide (__main__.TestMathFunc)</div><div class="line">Test method divide(a, b)</div><div class="line">----------------------------------------------------------------------</div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"D:/py/test_mathfunc.py"</span>, line <span class="number">26</span>, <span class="keyword">in</span> test_divide</div><div class="line">    self.assertEqual(<span class="number">2.5</span>, divide(<span class="number">5</span>, <span class="number">2</span>))</div><div class="line">AssertionError: <span class="number">2.5</span> != <span class="number">2</span></div><div class="line"></div><div class="line">----------------------------------------------------------------------</div><div class="line">Ran <span class="number">4</span> tests <span class="keyword">in</span> <span class="number">0.002</span>s</div><div class="line"></div><div class="line">FAILED (failures=<span class="number">1</span>)</div></pre></td></tr></table></figure></p>
<p></p><p></p>
<h3 id="组织TestSuite"><a href="#组织TestSuite" class="headerlink" title="组织TestSuite"></a>组织TestSuite</h3><p>你写的用例可能会有先后关系，需要先执行方法A，再执行方法B），我们就要用到TestSuite了。我们添加到TestSuite中的case是会按照添加的顺序执行的。</p>
<h4 id="test-suite-py"><a href="#test-suite-py" class="headerlink" title="test_suite.py"></a>test_suite.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> unittest</div><div class="line"><span class="keyword">from</span> test_mathfunc <span class="keyword">import</span> TestMathFunc</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    suite = unittest.TestSuite()</div><div class="line"></div><div class="line">    tests = [TestMathFunc(<span class="string">"test_add"</span>), TestMathFunc(<span class="string">"test_minus"</span>), TestMathFunc(<span class="string">"test_divide"</span>)]</div><div class="line">    suite.addTests(tests)</div><div class="line"></div><div class="line">    runner = unittest.TextTestRunner(verbosity=<span class="number">2</span>)</div><div class="line">    runner.run(suite)</div></pre></td></tr></table></figure>
<p>执行结果：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">test_add (test_mathfunc.TestMathFunc)</div><div class="line">Test method add(a, b) ... ok</div><div class="line">test_minus (test_mathfunc.TestMathFunc)</div><div class="line">Test method minus(a, b) ... ok</div><div class="line">test_divide (test_mathfunc.TestMathFunc)</div><div class="line">Test method divide(a, b) ... FAIL</div><div class="line"></div><div class="line">======================================================================</div><div class="line">FAIL: test_divide (test_mathfunc.TestMathFunc)</div><div class="line">Test method divide(a, b)</div><div class="line">----------------------------------------------------------------------</div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"D:\py\test_mathfunc.py"</span>, line <span class="number">26</span>, <span class="keyword">in</span> test_divide</div><div class="line">    self.assertEqual(<span class="number">2.5</span>, divide(<span class="number">5</span>, <span class="number">2</span>))</div><div class="line">AssertionError: <span class="number">2.5</span> != <span class="number">2</span></div><div class="line"></div><div class="line">----------------------------------------------------------------------</div><div class="line">Ran <span class="number">3</span> tests <span class="keyword">in</span> <span class="number">0.001</span>s</div><div class="line"></div><div class="line">FAILED (failures=<span class="number">1</span>)</div></pre></td></tr></table></figure></p>
<p>可以看到，执行情况跟我们预料的一样：执行了三个case，并且顺序是按照我们添加进suite的顺序执行的。</p>
<p>上面用了TestSuite的 addTests() 方法，并直接传入了TestCase列表，我们还可以：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 直接用addTest方法添加单个TestCase</span></div><div class="line">suite.addTest(TestMathFunc(<span class="string">"test_multi"</span>))</div><div class="line"></div><div class="line"><span class="comment"># 用addTests + TestLoader</span></div><div class="line"><span class="comment"># loadTestsFromName()，传入'模块名.TestCase名'</span></div><div class="line">suite.addTests(unittest.TestLoader().loadTestsFromName(<span class="string">'test_mathfunc.TestMathFunc'</span>))</div><div class="line">suite.addTests(unittest.TestLoader().loadTestsFromNames([<span class="string">'test_mathfunc.TestMathFunc'</span>]))  <span class="comment"># loadTestsFromNames()，类似，传入列表</span></div><div class="line"></div><div class="line"><span class="comment"># loadTestsFromTestCase()，传入TestCase</span></div><div class="line">suite.addTests(unittest.TestLoader().loadTestsFromTestCase(TestMathFunc))</div></pre></td></tr></table></figure></p>
<p>注意，用TestLoader的方法是无法对case进行排序的，同时，suite中也可以套suite。</p>
<h3 id="将结果输出到文件中"><a href="#将结果输出到文件中" class="headerlink" title="将结果输出到文件中"></a>将结果输出到文件中</h3><p>用例组织好了，但结果只能输出到控制台，这样没有办法查看之前的执行记录，我们想将结果输出到文件。很简单，看示例：</p>
<p>修改test_suite.py：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> unittest</div><div class="line"><span class="keyword">from</span> test_mathfunc <span class="keyword">import</span> TestMathFunc</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    suite = unittest.TestSuite()</div><div class="line">    suite.addTests(unittest.TestLoader().loadTestsFromTestCase(TestMathFunc))</div><div class="line"></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'UnittestTextReport.txt'</span>, <span class="string">'a'</span>) <span class="keyword">as</span> f:</div><div class="line">        runner = unittest.TextTestRunner(stream=f, verbosity=<span class="number">2</span>)</div><div class="line">        runner.run(suite)</div></pre></td></tr></table></figure></p>
<p>执行此文件，可以看到，在同目录下生成了UnittestTextReport.txt，所有的执行报告均输出到了此文件中，这下我们便有了txt格式的测试报告了。<br><img src="http://ot86l2rm2.bkt.clouddn.com/unittest03.png" alt=""></p>
<h3 id="test-fixture之setUp-tearDown"><a href="#test-fixture之setUp-tearDown" class="headerlink" title="test fixture之setUp() tearDown()"></a>test fixture之setUp() tearDown()</h3><p>上面整个测试基本跑了下来，但可能会遇到点特殊的情况：如果我的测试需要在每次执行之前准备环境，或者在每次执行完之后需要进行一些清理怎么办？比如执行前需要连接数据库，执行完成之后需要还原数据、断开连接。总不能每个测试方法中都添加准备环境、清理环境的代码吧。</p>
<p>这就要涉及到我们之前说过的test fixture了，修改test_mathfunc.py：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> unittest</div><div class="line"><span class="keyword">from</span> mathfunc <span class="keyword">import</span> *</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestMathFunc</span><span class="params">(unittest.TestCase)</span>:</span></div><div class="line">    <span class="string">"""Test mathfuc.py"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"do something before test.Prepare environment."</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"do something after test.Clean up."</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_add</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""Test method add(a, b)"""</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"add"</span></div><div class="line">        self.assertEqual(<span class="number">3</span>, add(<span class="number">1</span>, <span class="number">2</span>))</div><div class="line">        self.assertNotEqual(<span class="number">3</span>, add(<span class="number">2</span>, <span class="number">2</span>))</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_minus</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""Test method minus(a, b)"""</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"minus"</span></div><div class="line">        self.assertEqual(<span class="number">1</span>, minus(<span class="number">3</span>, <span class="number">2</span>))</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_multi</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""Test method multi(a, b)"""</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"multi"</span></div><div class="line">        self.assertEqual(<span class="number">6</span>, multi(<span class="number">2</span>, <span class="number">3</span>))</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_divide</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""Test method divide(a, b)"""</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"divide"</span></div><div class="line">        self.assertEqual(<span class="number">2</span>, divide(<span class="number">6</span>, <span class="number">3</span>))</div><div class="line">        self.assertEqual(<span class="number">2.5</span>, divide(<span class="number">5</span>, <span class="number">2</span>))</div></pre></td></tr></table></figure></p>
<p>我们添加了 setUp() 和 tearDown() 两个方法（其实是重写了TestCase的这两个方法），这两个方法在每个测试方法执行前以及执行后执行一次，setUp用来为测试准备环境，tearDown用来清理环境，已备之后的测试。</p>
<p>我们再执行一次：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">test_add (test_mathfunc.TestMathFunc)</div><div class="line">Test method add(a, b) ... ok</div><div class="line">test_divide (test_mathfunc.TestMathFunc)</div><div class="line">Test method divide(a, b) ... FAIL</div><div class="line">test_minus (test_mathfunc.TestMathFunc)</div><div class="line">Test method minus(a, b) ... ok</div><div class="line">test_multi (test_mathfunc.TestMathFunc)</div><div class="line">Test method multi(a, b) ... ok</div><div class="line"></div><div class="line">======================================================================</div><div class="line">FAIL: test_divide (test_mathfunc.TestMathFunc)</div><div class="line">Test method divide(a, b)</div><div class="line">----------------------------------------------------------------------</div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"D:\py\test_mathfunc.py"</span>, line <span class="number">36</span>, <span class="keyword">in</span> test_divide</div><div class="line">    self.assertEqual(<span class="number">2.5</span>, divide(<span class="number">5</span>, <span class="number">2</span>))</div><div class="line">AssertionError: <span class="number">2.5</span> != <span class="number">2</span></div><div class="line"></div><div class="line">----------------------------------------------------------------------</div><div class="line">Ran <span class="number">4</span> tests <span class="keyword">in</span> <span class="number">0.000</span>s</div><div class="line"></div><div class="line">FAILED (failures=<span class="number">1</span>)</div><div class="line">do something before test.Prepare environment.</div><div class="line">add</div><div class="line">do something after test.Clean up.</div><div class="line">do something before test.Prepare environment.</div><div class="line">divide</div><div class="line">do something after test.Clean up.</div><div class="line">do something before test.Prepare environment.</div><div class="line">minus</div><div class="line">do something after test.Clean up.</div><div class="line">do something before test.Prepare environment.</div><div class="line">multi</div><div class="line">do something after test.Clean up.</div></pre></td></tr></table></figure></p>
<p>可以看到setUp和tearDown在每次执行case前后都执行了一次。</p>
<p>如果想要在所有case执行之前准备一次环境，并在所有case执行结束之后再清理环境，我们可以用 setUpClass() 与 tearDownClass():<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestMathFunc</span><span class="params">(unittest.TestCase)</span>:</span></div><div class="line">    <span class="string">"""Test mathfuc.py"""</span></div><div class="line"></div><div class="line"><span class="meta">    @classmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUpClass</span><span class="params">(cls)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"This setUpClass() method only called once."</span></div><div class="line"></div><div class="line"><span class="meta">    @classmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDownClass</span><span class="params">(cls)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"This tearDownClass() method only called once too."</span></div></pre></td></tr></table></figure></p>
<p>执行结果如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">This setUpClass() method only called once.</div><div class="line">do something before test.Prepare environment.</div><div class="line">add</div><div class="line">do something after test.Clean up.</div><div class="line">...</div><div class="line">do something before test.Prepare environment.</div><div class="line">multi</div><div class="line">do something after test.Clean up.</div><div class="line">This tearDownClass() method only called once too.</div></pre></td></tr></table></figure></p>
<p>可以看到setUpClass以及tearDownClass均只执行了一次。</p>
<h3 id="跳过某个case"><a href="#跳过某个case" class="headerlink" title="跳过某个case"></a>跳过某个case</h3><p>如果我们临时想要跳过某个case不执行怎么办？unittest也提供了几种方法：</p>
<p>skip装饰器<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestMathFunc</span><span class="params">(unittest.TestCase)</span>:</span></div><div class="line">    <span class="string">"""Test mathfuc.py"""</span></div><div class="line"></div><div class="line">    ...</div><div class="line"></div><div class="line"><span class="meta">    @unittest.skip("I don't want to run this case.")</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_divide</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""Test method divide(a, b)"""</span></div><div class="line">        <span class="keyword">print</span> <span class="string">"divide"</span></div><div class="line">        self.assertEqual(<span class="number">2</span>, divide(<span class="number">6</span>, <span class="number">3</span>))</div><div class="line">        self.assertEqual(<span class="number">2.5</span>, divide(<span class="number">5</span>, <span class="number">2</span>))</div></pre></td></tr></table></figure></p>
<p>执行：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">test_add (test_mathfunc.TestMathFunc)</div><div class="line">Test method add(a, b) ... ok</div><div class="line">test_divide (test_mathfunc.TestMathFunc)</div><div class="line">Test method divide(a, b) ... skipped <span class="string">"I don't want to run this case."</span></div><div class="line">test_minus (test_mathfunc.TestMathFunc)</div><div class="line">Test method minus(a, b) ... ok</div><div class="line">test_multi (test_mathfunc.TestMathFunc)</div><div class="line">Test method multi(a, b) ... ok</div><div class="line"></div><div class="line">----------------------------------------------------------------------</div><div class="line">Ran <span class="number">4</span> tests <span class="keyword">in</span> <span class="number">0.000</span>s</div><div class="line"></div><div class="line">OK (skipped=<span class="number">1</span>)</div></pre></td></tr></table></figure>
<p>可以看到总的test数量还是4个，但divide()方法被skip了。</p>
<p>skip装饰器一共有三个 unittest.skip(reason)、unittest.skipIf(condition, reason)、unittest.skipUnless(condition, reason)，skip无条件跳过，skipIf当condition为True时跳过，skipUnless当condition为False时跳过。</p>
<h3 id="HTMLTestRunner输出漂亮报告"><a href="#HTMLTestRunner输出漂亮报告" class="headerlink" title="HTMLTestRunner输出漂亮报告"></a>HTMLTestRunner输出漂亮报告</h3><p>HTMLTestRunner不支持python 3,HtmlTestRunner是将单元测试的结果保存为html格式的测试报告的工具，这个工具的功能和HTMLTestRunner很像，而且名称也很像。但是它支持python3，而且生成的报告的样式更加美观。</p>
<p>访问这个url：<br><a href="https://pypi.python.org/pypi/html-testRunner/1.0.3" target="_blank" rel="external">https://pypi.python.org/pypi/html-testRunner/1.0.3</a></p>
<p>然后下载html_testRunner-1.0.3-py2.py3-none-any.whl文件，接下来通过下面命令来安装：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pip install html_testRunner<span class="number">-1.0</span><span class="number">.3</span>-py2.py3-none-any.whl</div></pre></td></tr></table></figure></p>
<p>修改我们的 test_suite.py：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> unittest</div><div class="line"><span class="keyword">import</span> HtmlTestRunner</div><div class="line"><span class="keyword">import</span> HTMLTestRunner</div><div class="line"><span class="keyword">from</span> test_mathfunc <span class="keyword">import</span> testMathFunc</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    suite = unittest.TestSuite()</div><div class="line">    tests = [</div><div class="line">        testMathFunc(<span class="string">"test_add"</span>), testMathFunc(<span class="string">"test_minus"</span>), testMathFunc(<span class="string">"test_multi"</span>), testMathFunc(<span class="string">"test_divide"</span>)]</div><div class="line">    suite.addTests(tests)</div><div class="line"></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'UnittestTextReport.txt'</span>, <span class="string">'a'</span>) <span class="keyword">as</span> f:</div><div class="line">        runner = unittest.TextTestRunner(stream=f, verbosity=<span class="number">2</span>)</div><div class="line">        runner.run(suite)</div><div class="line"></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'HtmlReport.html'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</div><div class="line">        runner = HtmlTestRunner.HTMLTestRunner(</div><div class="line">            output=<span class="string">'cal_report'</span>,</div><div class="line">            report_title=<span class="string">'math fun Report'</span></div><div class="line">                                )</div><div class="line">        runner.run(suite)</div></pre></td></tr></table></figure></p>
<p>并且输出了HTML测试报告，HTMLReport.html，如图：<br><img src="http://ot86l2rm2.bkt.clouddn.com/unittest04.png" alt=""></p>
<h3 id="测试代码覆盖率-Coverage-py"><a href="#测试代码覆盖率-Coverage-py" class="headerlink" title="测试代码覆盖率 Coverage.py"></a>测试代码覆盖率 Coverage.py</h3><p>Coverage.py 是一个用来测试代码覆盖率的 Python 第三方库。它起初是由 Ned Batchelder 创建。在编程界，术语“覆盖”通常是用来描述测试的有效性，以及测试的实际覆盖率。coverage.py 库支持 Python 2.6 或者更高的版本，还兼容 Python 3 的最新版以及 PyPy 。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install coverage</div></pre></td></tr></table></figure></p>
<p>一切准备就绪，让我们使用测试文件来运行 coverage.py。打开终端并且进入我们刚才写的那两个文件所在的目录。然后通过以下方式执行 coverage.py：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">coverage run test_mathfunc.py</div></pre></td></tr></table></figure></p>
<p>注意，我们需要调用 run 才能让 coverage.py 运行指定的模块。如果模块接收参数，可以像正常运行这个的模块一样带上参数。当执行以上指令后，你会看到测试模块的输出，就像正常运行该模块一样。在当前目录下，你还会发现一个名字为 .coverage 的文件（注意开头的点号）。要想获得文件中的信息，需要执行以下指令：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">coverage report -m</div></pre></td></tr></table></figure>
<p>执行这条指令将会在终端打印以下信息：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Name             Stmts   Miss  Cover   Missing</div><div class="line">----------------------------------------------</div><div class="line">mymath.py            <span class="number">9</span>      <span class="number">3</span>    <span class="number">67</span>%   <span class="number">9</span>, <span class="number">13</span>, <span class="number">17</span></div><div class="line">test_mymath.py      <span class="number">14</span>      <span class="number">0</span>   <span class="number">100</span>%</div><div class="line">----------------------------------------------</div><div class="line">TOTAL</div></pre></td></tr></table></figure></p>
<p>-m 选项告诉 coverage.py 你想在输出信息中显示 Missing 列。如果省略 -m 选项，就只能看到前四列信息。上面的输出表明，coverage 在执行完测试代码之后，判断我写的单体测试程序对 mymath 模块的覆盖率只有 67% 。 “Missing” 列表明哪些行代码没有被覆盖。如果你看过 coverage.py 指出的那些行代码，很快就会发现测试程序没有运行测试 subtract, multiply 和 divide 函数。</p>
<p>在尝试添加更多的覆盖率测试代码之前，先来学习一下怎么通过 coverage.py 来生成 HTML报告。只需要执行以下命令即可：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">coverage html</div></pre></td></tr></table></figure>
<p>以上指令将会生成一个叫 htmlcov 的目录，其中包括各种各样的文件。进入这个目录，并通过浏览器打开 index.html 文件。在我的电脑上，浏览器加载了这样的页面：<br><img src="http://ot86l2rm2.bkt.clouddn.com/unittest05.png" alt=""><br>实际上，你可以通过点击 Module 列中列出的文件名来打开一个新的页面，页面中将会明显标识出代码中没有被单体覆盖的部分。<br><img src="http://ot86l2rm2.bkt.clouddn.com/unittest06.png" alt=""></p>
<h3 id="总结一下"><a href="#总结一下" class="headerlink" title="总结一下"></a>总结一下</h3><ol>
<li><p>unittest是Python自带的单元测试框架，我们可以用其来作为我们自动化测试框架的用例组织执行框架。<br></p>
</li>
<li><p>unittest的流程：写好TestCase，然后由TestLoader加载TestCase到TestSuite，然后由TextTestRunner来运行TestSuite，运行的结果保存在TextTestResult中，我们通过命令行或者unittest.main()执行时，main会调用TextTestRunner中的run来执行，或者我们可以直接通过TextTestRunner来执行用例。<br></p>
</li>
<li><p>一个class继承unittest.TestCase即是一个TestCase，其中以 test 开头的方法在load时被加载为一个真正的TestCase。<br></p>
</li>
<li><p>verbosity参数可以控制执行结果的输出，0 是简单报告、1 是一般报告、2 是详细报告。<br></p>
</li>
<li><p>可以通过addTest和addTests向suite中添加case或suite，可以用TestLoader的loadTestsFrom__()方法。<br></p>
</li>
<li><p>用 setUp()、tearDown()、setUpClass()以及 tearDownClass()可以在用例执行前布置环境，以及在用例执行后清理环境<br></p>
</li>
<li><p>我们可以通过skip，skipIf，skipUnless装饰器跳过某个case，或者用TestCase.skipTest方法。<br></p>
</li>
<li><p>参数中加stream，可以将报告输出到文件：可以用TextTestRunner输出txt报告，以及可以用HTMLTestRunner输出html报告。<br></p>
</li>
<li><p>Coverage.py 可以检测单体测试代码并且发现单体测试覆盖中的漏洞。如果不确定你的单体测试程序是否达标，那么使用这个库包将会帮助你找到那些存在的漏洞。即便如此，你仍然需要认真负责地编写高质量的测试程序。如果没有写出有效的测试，而且测试还通过了，那么 coverage.py 也无法帮到你。</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Testing </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> unittest </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[图片测试-七牛云存储外链]]></title>
      <url>/2017/08/02/%E6%B5%8B%E8%AF%95%E5%9B%BE%E7%89%87/</url>
      <content type="html"><![CDATA[<p><img src="http://ot86l2rm2.bkt.clouddn.com/test1.jpeg" alt="test"></p>
]]></content>
      
        <categories>
            
            <category> Test </category>
            
        </categories>
        
        
        <tags>
            
            <tag> testing </tag>
            
            <tag> appium </tag>
            
            <tag> ster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[代码测试]]></title>
      <url>/2017/08/02/%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/</url>
      <content type="html"><![CDATA[<h2 id="代码测试"><a href="#代码测试" class="headerlink" title="代码测试"></a>代码测试</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;  </span></span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span>   <span class="comment">/*  辗转相除法求最大公约数 */</span>   </span></div><div class="line"><span class="function"></span>&#123;   </div><div class="line">    <span class="keyword">int</span> m, n, a, b, t, c;  </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"Input two integer numbers:\n"</span>);  </div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a, &amp;b);  </div><div class="line">    m=a;   n=b;  </div><div class="line">    <span class="keyword">while</span>(b!=<span class="number">0</span>)  <span class="comment">/* 余数不为0，继续相除，直到余数为0 */</span>   </div><div class="line">    &#123; c=a%b; a=b;  b=c;&#125;  </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"The largest common divisor:%d\n"</span>, a);  </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"The least common multiple:%d\n"</span>, m*n/a);  </div><div class="line"> &#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Test </category>
            
        </categories>
        
        
        <tags>
            
            <tag> testing </tag>
            
            <tag> appium </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[视频测试]]></title>
      <url>/2017/08/02/%E6%B5%8B%E8%AF%95%E8%A7%86%E9%A2%91/</url>
      <content type="html"><![CDATA[<embed src="https://play.wasu.cn/CACk.swf" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" wmode="opaque" width="100%">







]]></content>
      
        <categories>
            
            <category> Test </category>
            
        </categories>
        
        
        <tags>
            
            <tag> testing </tag>
            
            <tag> appium </tag>
            
            <tag> ster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[好玩的样式]]></title>
      <url>/2017/08/02/%E5%A5%BD%E7%8E%A9%E7%9A%84%E6%A0%B7%E5%BC%8F/</url>
      <content type="html"><![CDATA[<h2 id="好玩的样式"><a href="#好玩的样式" class="headerlink" title="好玩的样式"></a>好玩的样式</h2><p>先在themes/next/source/css/_custom/custom.styl中添加以下样式：<br><a id="more"></a><br> <figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div></pre></td><td class="code"><pre><div class="line">// 下载样式</div><div class="line"><span class="selector-tag">a</span><span class="selector-id">#download</span> &#123;</div><div class="line"><span class="attribute">display</span>: inline-block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</div><div class="line"><span class="attribute">color</span>: <span class="number">#000</span>;</div><div class="line"><span class="attribute">background</span>: transparent;</div><div class="line"><span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">2px</span>;</div><div class="line"><span class="attribute">transition</span>: all .<span class="number">5s</span> ease;</div><div class="line"><span class="attribute">font-weight</span>: bold;</div><div class="line">&amp;:hover &#123;</div><div class="line"><span class="selector-tag">background</span>: <span class="selector-id">#000</span>;</div><div class="line"><span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">/ /颜色块-黄</div><div class="line"><span class="selector-tag">span</span><span class="selector-id">#inline-yellow</span> &#123;</div><div class="line"><span class="attribute">display</span>:inline;</div><div class="line"><span class="attribute">padding</span>:.<span class="number">2em</span> .<span class="number">6em</span> .<span class="number">3em</span>;</div><div class="line"><span class="attribute">font-size</span>:<span class="number">80%</span>;</div><div class="line"><span class="attribute">font-weight</span>:bold;</div><div class="line"><span class="attribute">line-height</span>:<span class="number">1</span>;</div><div class="line"><span class="attribute">color</span>:<span class="number">#fff</span>;</div><div class="line"><span class="attribute">text-align</span>:center;</div><div class="line"><span class="attribute">white-space</span>:nowrap;</div><div class="line"><span class="attribute">vertical-align</span>:baseline;</div><div class="line"><span class="attribute">border-radius</span>:<span class="number">0</span>;</div><div class="line"><span class="attribute">background-color</span>: <span class="number">#f0ad4e</span>;</div><div class="line">&#125;</div><div class="line">// 颜色块-绿</div><div class="line"><span class="selector-tag">span</span><span class="selector-id">#inline-green</span> &#123;</div><div class="line"><span class="attribute">display</span>:inline;</div><div class="line"><span class="attribute">padding</span>:.<span class="number">2em</span> .<span class="number">6em</span> .<span class="number">3em</span>;</div><div class="line"><span class="attribute">font-size</span>:<span class="number">80%</span>;</div><div class="line"><span class="attribute">font-weight</span>:bold;</div><div class="line"><span class="attribute">line-height</span>:<span class="number">1</span>;</div><div class="line"><span class="attribute">color</span>:<span class="number">#fff</span>;</div><div class="line"><span class="attribute">text-align</span>:center;</div><div class="line"><span class="attribute">white-space</span>:nowrap;</div><div class="line"><span class="attribute">vertical-align</span>:baseline;</div><div class="line"><span class="attribute">border-radius</span>:<span class="number">0</span>;</div><div class="line"><span class="attribute">background-color</span>: <span class="number">#5cb85c</span>;</div><div class="line">&#125;</div><div class="line">// 颜色块-蓝</div><div class="line"><span class="selector-tag">span</span><span class="selector-id">#inline-blue</span> &#123;</div><div class="line"><span class="attribute">display</span>:inline;</div><div class="line"><span class="attribute">padding</span>:.<span class="number">2em</span> .<span class="number">6em</span> .<span class="number">3em</span>;</div><div class="line"><span class="attribute">font-size</span>:<span class="number">80%</span>;</div><div class="line"><span class="attribute">font-weight</span>:bold;</div><div class="line"><span class="attribute">line-height</span>:<span class="number">1</span>;</div><div class="line"><span class="attribute">color</span>:<span class="number">#fff</span>;</div><div class="line"><span class="attribute">text-align</span>:center;</div><div class="line"><span class="attribute">white-space</span>:nowrap;</div><div class="line"><span class="attribute">vertical-align</span>:baseline;</div><div class="line"><span class="attribute">border-radius</span>:<span class="number">0</span>;</div><div class="line"><span class="attribute">background-color</span>: <span class="number">#2780e3</span>;</div><div class="line">&#125;</div><div class="line">// 颜色块-紫</div><div class="line"><span class="selector-tag">span</span><span class="selector-id">#inline-purple</span> &#123;</div><div class="line"><span class="attribute">display</span>:inline;</div><div class="line"><span class="attribute">padding</span>:.<span class="number">2em</span> .<span class="number">6em</span> .<span class="number">3em</span>;</div><div class="line"><span class="attribute">font-size</span>:<span class="number">80%</span>;</div><div class="line"><span class="attribute">font-weight</span>:bold;</div><div class="line"><span class="attribute">line-height</span>:<span class="number">1</span>;</div><div class="line"><span class="attribute">color</span>:<span class="number">#fff</span>;</div><div class="line"><span class="attribute">text-align</span>:center;</div><div class="line"><span class="attribute">white-space</span>:nowrap;</div><div class="line"><span class="attribute">vertical-align</span>:baseline;</div><div class="line"><span class="attribute">border-radius</span>:<span class="number">0</span>;</div><div class="line"><span class="attribute">background-color</span>: <span class="number">#9954bb</span>;</div><div class="line">&#125;</div><div class="line">// 左侧边框红色块级</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-left-red</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-left-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-left-color</span>: <span class="number">#df3e3e</span>;</div><div class="line">&#125;</div><div class="line">// 左侧边框黄色块级</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-left-yellow</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-left-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-left-color</span>: <span class="number">#f0ad4e</span>;</div><div class="line">&#125;</div><div class="line">// 左侧边框绿色块级</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-left-green</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-left-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-left-color</span>: <span class="number">#5cb85c</span>;</div><div class="line">&#125;</div><div class="line">// 左侧边框蓝色块级</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-left-blue</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-left-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-left-color</span>: <span class="number">#2780e3</span>;</div><div class="line">&#125;</div><div class="line">// 左侧边框紫色块级</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-left-purple</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-left-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-left-color</span>: <span class="number">#9954bb</span>;</div><div class="line">&#125;</div><div class="line">// 右侧边框红色块级</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-right-red</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-right-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-right-color</span>: <span class="number">#df3e3e</span>;</div><div class="line">&#125;</div><div class="line">// 右侧边框黄色块级</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-right-yellow</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-right-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-right-color</span>: <span class="number">#f0ad4e</span>;</div><div class="line">&#125;</div><div class="line">// 右侧边框绿色块级</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-right-green</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-right-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-right-color</span>: <span class="number">#5cb85c</span>;</div><div class="line">&#125;</div><div class="line">// 右侧边框蓝色块级</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-right-blue</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-right-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-right-color</span>: <span class="number">#2780e3</span>;</div><div class="line">&#125;</div><div class="line">// 右侧边框紫色块级</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-right-purple</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-right-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-right-color</span>: <span class="number">#9954bb</span>;</div><div class="line">&#125;</div><div class="line">// 上侧边框红色</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-top-red</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-top-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-top-color</span>: <span class="number">#df3e3e</span>;</div><div class="line">&#125;</div><div class="line">// 上侧边框黄色</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-top-yellow</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-top-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-top-color</span>: <span class="number">#f0ad4e</span>;</div><div class="line">&#125;</div><div class="line">// 上侧边框绿色</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-top-green</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-top-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-top-color</span>: <span class="number">#5cb85c</span>;</div><div class="line">&#125;</div><div class="line">// 上侧边框蓝色</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-top-blue</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-top-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-top-color</span>: <span class="number">#2780e3</span>;</div><div class="line">&#125;</div><div class="line">// 上侧边框紫色</div><div class="line"><span class="selector-tag">p</span><span class="selector-id">#div-border-top-purple</span> &#123;</div><div class="line"><span class="attribute">display</span>: block;</div><div class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line"><span class="attribute">border-top-width</span>: <span class="number">5px</span>;</div><div class="line"><span class="attribute">border-radius</span>: <span class="number">3px</span>;</div><div class="line"><span class="attribute">border-top-color</span>: <span class="number">#9954bb</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>用法如下：</p>
<h3 id="文字增加背景色块"><a href="#文字增加背景色块" class="headerlink" title="文字增加背景色块"></a>文字增加背景色块</h3><p><span id="inline-blue">站点配置文件</span>，<br><span id="inline-purple">主题配置文件</span><br> <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"inline-blue"</span>&gt;</span>站点配置文件<span class="tag">&lt;/<span class="name">span</span>&gt;</span>， </div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"inline-purple"</span>&gt;</span>主题配置文件<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="引用边框变色"><a href="#引用边框变色" class="headerlink" title="引用边框变色"></a>引用边框变色</h3><p></p><p id="div-border-left-red">如果没有安装成功，那可能就是墙的原因。建议下载 <code>Node.js</code> 直接安装。</p><p></p>
<p></p><p id="div-border-top-blue">关于更多基本操作和基础知识，请查阅 <a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a> 与 <a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT</a> 官方文档.</p><br> <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"div-border-left-red"</span>&gt;</span>如果没有安装成功，那可能就是墙的原因。建议下载 `Node.js` 直接安装。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"div-border-top-blue"</span>&gt;</span>关于更多基本操作和基础知识，请查阅 [Hexo](https://hexo.io/zh-cn/) 与 [NexT](http://theme-next.iissnan.com/) 官方文档.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure><p></p>
<h3 id="在文档中增加图标"><a href="#在文档中增加图标" class="headerlink" title="在文档中增加图标"></a>在文档中增加图标</h3><ul>
<li><i class="fa fa-pencil"></i>支持Markdown<br><i>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</i></li>
<li><i class="fa fa-cloud-upload"></i>一件部署<br><i>只需一条指令即可部署到Github Pages，或其他网站</i></li>
<li><i class="fa fa-cog"></i>丰富的插件<br><i>Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。</i><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-pencil"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>支持Markdown</div><div class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。<span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line">- <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-cloud-upload"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>一件部署</div><div class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>只需一条指令即可部署到Github Pages，或其他网站<span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line">- <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-cog"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>丰富的插件</div><div class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。<span class="tag">&lt;/<span class="name">i</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p><i class="fa fa-github"></i><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-github"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><i class="fa fa-github fa-lg"></i><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-github fa-lg"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><i class="fa fa-github fa-2x"></i><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-github fa-2x"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>采用的是Font Awesome的图标。</p>
<h3 id="图形边框效果"><a href="#图形边框效果" class="headerlink" title="图形边框效果"></a>图形边框效果</h3><p><a id="download" href="https://git-scm.com/download/win" target="_blank" rel="external"><i class="fa fa-download"></i><span> Download Now</span><br></a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"download"</span> <span class="attr">href</span>=<span class="string">"https://git-scm.com/download/win"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-download"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span> Download Now<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html#more" target="_blank" rel="external">hexo的next主题个性化教程:打造炫酷网站</a><br><a href="http://ookamiantd.top/2017/build-blog-hexo-advanced/" target="_blank" rel="external">基于Hexo搭建个人博客——进阶篇(从入门到入土)</a><br>[自定义页面样式]（<a href="http://cduyzh.com）" target="_blank" rel="external">http://cduyzh.com）</a></p>
]]></content>
      
        <categories>
            
            <category> Test </category>
            
        </categories>
        
        
        <tags>
            
            <tag> testing </tag>
            
            <tag> appium </tag>
            
            <tag> ster </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/08/02/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
